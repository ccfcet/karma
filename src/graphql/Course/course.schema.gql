extend type Query {
  course(id: ID): [Course!]
  course_instance(id: ID): [CourseInstance!]
  academic_duration(id: ID): [AcademicDuration!]
}

extend type Mutation {
  createCourse(course: CreateCourseInput!): MutateCourseResult
  updateCourse(course: UpdateCourseInput!): MutateCourseResult
  deleteCourse(id: ID!): DeleteResult
  createAcademicDuration(academic_duration: CreateAcademicDurationInput!): MutateAcademicDurationResult
  updateAcademicDuration(academic_duration: UpdateAcademicDurationInput!): MutateAcademicDurationResult
  deleteAcademicDuration(id: ID!): DeleteResult
  createCourseInstance(course_instance: CreateCourseInstanceInput!): MutateCourseInstanceResult
  updateCourseInstance(course_instance: UpdateCourseInstanceInput!): MutateCourseInstanceResult
  deleteCourseInstance(id: ID!): DeleteResult
}

type Course {
  id: ID!
  code: String
  name: String!
  entity: Entity!
  credits: Float
  created_at: String!
  updated_at: String!
}

type CourseInstance {
  id: ID!
  course: Course!
  tag: String!
  academic_duration: AcademicDuration!
  members: [CourseInstanceMember!]
  time_slots: [TimeSlot!]
  created_at: String!
  updated_at: String!
}

type CourseInstanceMember {
  id: ID!
  people: People!
  type: String!
  created_at: String!
  updated_at: String!
}

type TimeSlot {
  id: ID!
  start_time: String!
  end_time: String!
  attendance: [AttendanceData!]
  created_at: String!
  updated_at: String!
}

type AttendanceData {
  id: ID!
  people: People!
  value: Int!
  created_at: String!
  updated_at: String!
}

type AcademicDuration {
  id: ID!
  name: String!
  start_date: String!
  end_date: String!
  created_at: String!
  updated_at: String!
}

input CreateCourseInput {
  code: String!
  name: String!
  entity_id: Int!
  credits: Float!
}

input UpdateCourseInput {
  id: ID!
  code: String
  name: String
  entity_id: Int
  credits: Float
}

union MutateCourseResult = Course | ValidationError | BaseError

input CreateCourseInstanceInput {
  course_id: Int!
  tag: String!
  academic_duration_id: Int!
}

input UpdateCourseInstanceInput {
  id: ID!
  course_id: Int
  tag: String
  academic_duration_id: Int
}

union MutateCourseInstanceResult = CourseInstance | ValidationError | BaseError

input CreateAcademicDurationInput {
  name: String!
  start_date: String!
  end_date: String!
}

input UpdateAcademicDurationInput {
  id: ID!
  name: String
  start_date: String
  end_date: String
}

union MutateAcademicDurationResult = AcademicDuration | ValidationError | BaseError
