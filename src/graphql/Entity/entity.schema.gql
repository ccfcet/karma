extend type Query {
  entity_type(id: ID): [EntityType!]
  entity(id: ID): [Entity!]
}

extend type Mutation {
  createEntityType(entity_type: CreateEntityTypeInput!): MutateEntityTypeResult
  updateEntityType(entity_type: UpdateEntityTypeInput!): MutateEntityTypeResult
  deleteEntityType(id: ID!): DeleteResult
  createEntity(entity: CreateEntityInput!): MutateEntityResult
  updateEntity(entity: UpdateEntityInput!): MutateEntityResult
  deleteEntity(id: ID!): DeleteResult
}

type EntityType {
  id: ID!
  value: String!
  created_at: String!
  updated_at: String!
}

type Entity {
  id: ID!
  name: String!
  entity_type: EntityType!
  children: [Entity!]
  address: [Address!]
  created_at: String!
  updated_at: String!
}

input CreateEntityTypeInput {
  value: String!
}

input UpdateEntityTypeInput {
  id: ID!
  value: String!
}

union MutateEntityTypeResult = EntityType | ValidationError | BaseError

input CreateEntityInput {
  name: String!
  entity_type_id: Int!
}

input UpdateEntityInput {
  id: ID!
  name: String
  entity_type_id: Int
}

union MutateEntityResult = Entity | ValidationError | BaseError
